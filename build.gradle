buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath libs.kotlin.gradle.plugin
        classpath libs.kotlin.serialization.plugin
    }
}

plugins {
    alias libs.plugins.kotlin.jvm
    alias libs.plugins.kotlin.serialization
    id 'application'
}

repositories {
    mavenCentral()
    maven { url "https://git.inmo.dev/api/packages/InsanusMokrassar/maven" }
}

dependencies {
    implementation libs.kotlin

    implementation libs.tgbotapi
    implementation libs.ktor.client.okhttp
}

application {
    mainClassName = 'AppKt'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    classifier("all")
    manifest {
        attributes "Main-Class": "$mainClassName"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task uberJar(type: Jar) {
    archiveClassifier = 'uber'

    manifest {
        attributes "Main-Class": "$mainClassName"
    }

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}